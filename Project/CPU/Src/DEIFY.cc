#include "DEIFY.h"
#include <cstdio>
#include <cmath>
#include <ctime>

// Dissipative Extension for Ideal Fluid dYnamics
DEIFY::DEIFY()
{
  sourceExists = true;
}

DEIFY::DEIFY(Data * data, FluxMethod * fluxMethod) : ModelExtension(data), fluxMethod(fluxMethod)
{
  //  Syntax
  Data * d(this->data);

  sourceExists = true;
//  fluxExists = true;

  // Allocate arrays
  // Additional Flux vectors from NS Dissipation Terms
  Fx = new double[d->Nx*d->Ny*d->Nz*5] ();
  Fy = new double[d->Nx*d->Ny*d->Nz*5] ();
  Fz = new double[d->Nx*d->Ny*d->Nz*5] ();
  dtH = new double[d->Nx*d->Ny*d->Nz*5] ();
  d->sourceExtension = new double[d->Nx*d->Ny*d->Nz*5] ();
}

DEIFY::~DEIFY()
{
  //  Syntax
  Data * d(this->data);

  delete[] Fx;
  delete[] Fy;
  delete[] Fz;
  delete[] dtH;
  delete[] d->sourceExtension;
}

void DEIFY::sourceExtension(double * cons, double * prims, double * aux, double * source)
{
  // Syntax
  Data * d(this->data);

  // Set vars - dissipative NS forms
  this->set_vars(cons, prims, aux);
 
  // Determine the diffusion vectors
  this->set_Fx(cons, prims, aux);
  for (int var(0); var<5; var++) {
    for (int i(d->is); i < d->ie; i++) {
      for (int j(d->js); j < d->je; j++) {
        for (int k(d->ks); k < d->ke; k++) {
            source[ID(var, i, j, k)] = -(Fx[ID(var, i+1, j, k)] - Fx[ID(var, i-1, j, k)]) / (2*d->dx);
            //source[ID(var, i, j, k)] = -(Fx[ID(var, i+1, j, k)] - 2*Fx[ID(var, i, j, k)] + Fx[ID(var, i-1, j, k)]) / (d->dx);
        }
      }
    }
  }

  if (d->dims>1) {
    this->set_Fy(cons, prims, aux);
    for (int var(0); var<5; var++) {
      for (int i(d->is); i < d->ie; i++) {
        for (int j(d->js); j < d->je; j++) {
          for (int k(d->ks); k < d->ke; k++) {
              source[ID(var, i, j, k)] += -(Fy[ID(var, i, j+1, k)] - Fy[ID(var, i, j-1, k)]) / (2*d->dy);
              //source[ID(var, i, j, k)] += -(Fy[ID(var, i, j+1, k)] - 2*Fy[ID(var, i, j, k)] + Fy[ID(var, i, j-1, k)]) / (d->dy);
          }
        }
      }
    }
  }

  if (d->dims==3) {
    this->set_Fz(cons, prims, aux);
    for (int var(0); var<5; var++) {
      for (int i(d->is); i < d->ie; i++) {
        for (int j(d->js); j < d->je; j++) {
          for (int k(d->ks); k < d->ke; k++) {
            source[ID(var, i, j, k)] += -(Fz[ID(var, i, j, k+1)] - Fz[ID(var, i, j, k-1)]) / (2*d->dz);
            //source[ID(var, i, j, k)] += -(Fz[ID(var, i, j, k+1)] - 2*Fz[ID(var, i, j, k)] + Fz[ID(var, i, j, k-1)]) / (d->dz);
          }
        }
      }
    }
  }

  this->set_dtH(cons, prims, aux);
  for (int var(0); var<5; var++) {
    for (int i(d->is); i < d->ie; i++) {
      for (int j(d->js); j < d->je; j++) {
        for (int k(d->ks); k < d->ke; k++) {
          source[ID(var, i, j, k)] += -dtH[ID(var, i, j, k)];
        }
      }
    }
  }

}

void DEIFY::set_vars(double * cons, double * prims, double * aux)
{
  Data * d(this->data);

  double kappa = this->data->optionalSimArgs[0];
  double zeta = this->data->optionalSimArgs[2];
  double eta = this->data->optionalSimArgs[4];

  double dxT, dyT, dzT;
  double dxn, dyn, dzn;
  double dxux, dyuy, dzuz;
  double dxuy, dxuz, dyux;
  double dyuz, dzux, dzuy;

  double vx, vy, vz;
  double dxW, dyW, dzW;
  double dxvx, dyvy, dzvz;
  double dxvy, dxvz, dyvx;
  double dyvz, dzvx, dzvy;


/*
  for (int i(d->is_minus.at(0)); i < d->ie_plus.at(0); i++) {
    for (int j(d->js_minus.at(0)); j < d->je_plus.at(0); j++) {
      for (int k(d->ks_minus.at(0)); k < d->ke_plus.at(0); k++) {
*/

  for (int i(d->is); i < d->ie; i++) {
    for (int j(d->js); j < d->je; j++) {
      for (int k(d->ks); k < d->ke; k++) {

        // dxT = (aux[ID(Aux::T, i+1, j, k)] - aux[ID(Aux::T, i-1, j, k)])/(2*d->dx);
        // dyT = (aux[ID(Aux::T, i, j+1, k)] - aux[ID(Aux::T, i, j-1, k)])/(2*d->dy);
        // dzT = (aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(2*d->dz);

        // dxux = (aux[ID(Aux::W, i+1, j, k)]*prims[ID(Prims::v1, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)]*prims[ID(Prims::v1, i-1, j, k)])/(2*d->dx);
        // dyuy = (aux[ID(Aux::W, i, j+1, k)]*prims[ID(Prims::v1, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)]*prims[ID(Prims::v1, i, j-1, k)])/(2*d->dy);
        // dzuz = (aux[ID(Aux::W, i, j, k+1)]*prims[ID(Prims::v1, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)]*prims[ID(Prims::v1, i, j, k-1)])/(2*d->dz);

        // dxuy = (aux[ID(Aux::W, i+1, j, k)]*prims[ID(Prims::v2, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)]*prims[ID(Prims::v2, i-1, j, k)])/(2*d->dx);
        // dxuz = (aux[ID(Aux::W, i+1, j, k)]*prims[ID(Prims::v3, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)]*prims[ID(Prims::v3, i-1, j, k)])/(2*d->dx);
        // dyux = (aux[ID(Aux::W, i, j+1, k)]*prims[ID(Prims::v1, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)]*prims[ID(Prims::v1, i, j-1, k)])/(2*d->dy);
        // dyuz = (aux[ID(Aux::W, i, j+1, k)]*prims[ID(Prims::v3, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)]*prims[ID(Prims::v3, i, j-1, k)])/(2*d->dy);
        // dzux = (aux[ID(Aux::W, i, j, k+1)]*prims[ID(Prims::v1, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)]*prims[ID(Prims::v1, i, j, k-1)])/(2*d->dz);
        // dzuy = (aux[ID(Aux::W, i, j, k+1)]*prims[ID(Prims::v2, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)]*prims[ID(Prims::v2, i, j, k-1)])/(2*d->dz);

        dxT = Grad(Aux::T, 0, 2, cons, prims, aux, i, j, k);
        dyT = Grad(Aux::T, 1, 2, cons, prims, aux, i, j, k);
        dzT = Grad(Aux::T, 2, 2, cons, prims, aux, i, j, k);

        dxn = Grad(Prims::n, 0, 0, cons, prims, aux, i, j, k);
        dyn = Grad(Prims::n, 1, 0, cons, prims, aux, i, j, k);
        dzn = Grad(Prims::n, 2, 0, cons, prims, aux, i, j, k);

        dxW = Grad(Aux::W, 0, 2, cons, prims, aux, i, j, k);
        dyW = Grad(Aux::W, 1, 2, cons, prims, aux, i, j, k);
        dzW = Grad(Aux::W, 2, 2, cons, prims, aux, i, j, k);

        dxvx = Grad(Prims::v1, 0, 1, cons, prims, aux, i, j, k);
        dxvy = Grad(Prims::v2, 0, 1, cons, prims, aux, i, j, k);
        dxvz = Grad(Prims::v3, 0, 1, cons, prims, aux, i, j, k);

        dyvx = Grad(Prims::v1, 1, 1, cons, prims, aux, i, j, k);
        dyvy = Grad(Prims::v2, 1, 1, cons, prims, aux, i, j, k);
        dyvz = Grad(Prims::v3, 1, 1, cons, prims, aux, i, j, k);

        dzvx = Grad(Prims::v1, 2, 1, cons, prims, aux, i, j, k);
        dzvy = Grad(Prims::v2, 2, 1, cons, prims, aux, i, j, k);
        dzvz = Grad(Prims::v3, 2, 1, cons, prims, aux, i, j, k);

        double W = aux[ID(Aux::W, i, j, k)];
        vx = prims[ID(Prims::v1, i, j, k)];
        vy = prims[ID(Prims::v2, i, j, k)];
        vz = prims[ID(Prims::v3, i, j, k)];

        // Chain rule for derivatives of u (W*v)
        dxux = W*dxvx + cube(W)*(vx*dxvx + vy*dxvy + vz*dxvz);
        dxuy = W*dxvy + cube(W)*(vx*dxvx + vy*dxvy + vz*dxvz);
        dxuz = W*dxvz + cube(W)*(vx*dxvx + vy*dxvy + vz*dxvz);

        dyux = W*dyvx + cube(W)*(vx*dyvx + vy*dyvy + vz*dyvz);
        dyuy = W*dyvy + cube(W)*(vx*dyvx + vy*dyvy + vz*dyvz);
        dyuz = W*dyvz + cube(W)*(vx*dyvx + vy*dyvy + vz*dyvz);

        dzux = W*dzvx + cube(W)*(vx*dzvx + vy*dzvy + vz*dzvz);
        dzuy = W*dzvy + cube(W)*(vx*dzvx + vy*dzvy + vz*dzvz);
        dzuz = W*dzvz + cube(W)*(vx*dzvx + vy*dzvy + vz*dzvz);

        aux[ID(Aux::a1, i, j, k)] = aux[ID(Aux::W, i, j, k)] * ( aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] 
          + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*dxux
          + prims[ID(Prims::v2, i, j, k)]*dyux + prims[ID(Prims::v3, i, j, k)]*dzux );
        
        aux[ID(Aux::a2, i, j, k)] = aux[ID(Aux::W, i, j, k)] * ( aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] 
          + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*dxuy
          + prims[ID(Prims::v2, i, j, k)]*dyuy + prims[ID(Prims::v3, i, j, k)]*dzuy );
        
        aux[ID(Aux::a3, i, j, k)] = aux[ID(Aux::W, i, j, k)] * ( aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] 
          + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*dxuz
          + prims[ID(Prims::v2, i, j, k)]*dyuz + prims[ID(Prims::v3, i, j, k)]*dzuz );

        aux[ID(Aux::q1NS, i, j, k)] = -kappa* ( (1+ sqr(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]))*dxT 
          + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyT
          + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzT );
        aux[ID(Aux::q2NS, i, j, k)] = -kappa* ( (1+ sqr(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]))*dyT 
          + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxT
          + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzT );
        aux[ID(Aux::q3NS, i, j, k)] = -kappa* ( (1+ sqr(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]))*dzT 
          + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxT
          + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyT );

        // Theta 20 then Pi,NS 13 
        aux[ID(Aux::Theta, i, j, k)] = aux[ID(TDerivs::dtW, i, j, k)] + dxux + dyuy + dzuz;
        // Pi,NS = -zeta*Theta
        aux[ID(Aux::PiNS, i, j, k)] = -zeta * aux[ID(Aux::Theta, i, j, k)];
  
        // pi^l_j,NS 14 - STILL NOT FULLY CORRECT - NEED MORE h_munu factors in front of big bracket!
        // 11
        aux[ID(Aux::pi11NS, i, j, k)] = -2*eta*( 2*dxux 
          - (2/3)*(1 + (aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]))*aux[ID(Aux::Theta, i, j, k)] );
        // 12
        aux[ID(Aux::pi12NS, i, j, k)] = -2*eta*( dxuy + dyux
          - (2/3)*((aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]))*aux[ID(Aux::Theta, i, j, k)] );
        // 13
        aux[ID(Aux::pi13NS, i, j, k)] = -2*eta*( dxuz + dzux
          - (2/3)*((aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]))*aux[ID(Aux::Theta, i, j, k)] );
        // 22
        aux[ID(Aux::pi22NS, i, j, k)] = -2*eta*( 2*dyuy
          - (2/3)*(1 + (aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)])*(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]))*aux[ID(Aux::Theta, i, j, k)] );
        // 23
        aux[ID(Aux::pi23NS, i, j, k)] = -2*eta*( dyuz + dzuy
          - (2/3)*((aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)])*(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]))*aux[ID(Aux::Theta, i, j, k)] );
        // 33
        aux[ID(Aux::pi33NS, i, j, k)] = -2*eta*( 2*dzuz
          - (2/3)*(1 + (aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*(aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]))*aux[ID(Aux::Theta, i, j, k)] );

        aux[ID(TDerivs::dtE, i, j, k)] = aux[ID(TDerivs::dtTau, i, j, k)] + aux[ID(TDerivs::dtD, i, j, k)];

        // Now calculate the NS gradients for LO pieces

        double dxPiNS = Grad(Aux::PiNS, 0, 2, cons, prims, aux, i, j, k);
        double dyPiNS = Grad(Aux::PiNS, 1, 2, cons, prims, aux, i, j, k);
        double dzPiNS = Grad(Aux::PiNS, 2, 2, cons, prims, aux, i, j, k);

        double dxq1NS = Grad(Aux::q1NS, 0, 2, cons, prims, aux, i, j, k);
        double dyq2NS = Grad(Aux::q2NS, 1, 2, cons, prims, aux, i, j, k);
        double dzq3NS = Grad(Aux::q3NS, 2, 2, cons, prims, aux, i, j, k);

        double dyq1NS = Grad(Aux::q1NS, 1, 2, cons, prims, aux, i, j, k);
        double dzq2NS = Grad(Aux::q2NS, 2, 2, cons, prims, aux, i, j, k);
        double dxq3NS = Grad(Aux::q3NS, 0, 2, cons, prims, aux, i, j, k);

        double dzq1NS = Grad(Aux::q1NS, 2, 2, cons, prims, aux, i, j, k);
        double dxq2NS = Grad(Aux::q2NS, 1, 2, cons, prims, aux, i, j, k);
        double dyq3NS = Grad(Aux::q3NS, 2, 2, cons, prims, aux, i, j, k);

        double dxpi11NS = Grad(Aux::pi11NS, 0, 2, cons, prims, aux, i, j, k);
        double dxpi12NS = Grad(Aux::pi12NS, 0, 2, cons, prims, aux, i, j, k);
        double dxpi13NS = Grad(Aux::pi13NS, 0, 2, cons, prims, aux, i, j, k);
        double dxpi22NS = Grad(Aux::pi22NS, 0, 2, cons, prims, aux, i, j, k);
        double dxpi23NS = Grad(Aux::pi23NS, 0, 2, cons, prims, aux, i, j, k);
        double dxpi33NS = Grad(Aux::pi33NS, 0, 2, cons, prims, aux, i, j, k);

        double dypi11NS = Grad(Aux::pi11NS, 1, 2, cons, prims, aux, i, j, k);
        double dypi12NS = Grad(Aux::pi12NS, 1, 2, cons, prims, aux, i, j, k);
        double dypi13NS = Grad(Aux::pi13NS, 1, 2, cons, prims, aux, i, j, k);
        double dypi22NS = Grad(Aux::pi22NS, 1, 2, cons, prims, aux, i, j, k);
        double dypi23NS = Grad(Aux::pi23NS, 1, 2, cons, prims, aux, i, j, k);
        double dypi33NS = Grad(Aux::pi33NS, 1, 2, cons, prims, aux, i, j, k);

        double dzpi11NS = Grad(Aux::pi11NS, 2, 2, cons, prims, aux, i, j, k);
        double dzpi12NS = Grad(Aux::pi12NS, 2, 2, cons, prims, aux, i, j, k);
        double dzpi13NS = Grad(Aux::pi13NS, 2, 2, cons, prims, aux, i, j, k);
        double dzpi22NS = Grad(Aux::pi22NS, 2, 2, cons, prims, aux, i, j, k);
        double dzpi23NS = Grad(Aux::pi23NS, 2, 2, cons, prims, aux, i, j, k);
        double dzpi33NS = Grad(Aux::pi33NS, 2, 2, cons, prims, aux, i, j, k);

        // Begin Jacobian inversion solution results:
        aux[ID(TDerivs::dtp, i, j, k)] = (d->gamma - 1)*aux[ID(TDerivs::dtE, i, j, k)]/(d->gamma*sqr(aux[ID(Aux::W, i, j, k)]) - d->gamma + 1) + (-d->gamma*aux[ID(Aux::W, i, j, k)] + aux[ID(Aux::W, i, j, k)])*aux[ID(TDerivs::dtD, i, j, k)]/(d->gamma*sqr(aux[ID(Aux::W, i, j, k)]) - d->gamma + 1);
        aux[ID(TDerivs::dtrho, i, j, k)] = (d->gamma*sqr(aux[ID(Aux::W, i, j, k)]) - d->gamma - sqr(aux[ID(Aux::W, i, j, k)]) + 1)*aux[ID(TDerivs::dtD, i, j, k)]/(d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)]) - d->gamma*aux[ID(Aux::W, i, j, k)] + aux[ID(Aux::W, i, j, k)]) + aux[ID(TDerivs::dtE, i, j, k)]/(d->gamma*sqr(aux[ID(Aux::W, i, j, k)]) - d->gamma + 1);
        aux[ID(TDerivs::dtv1, i, j, k)] = -d->gamma*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtE, i, j, k)]/(d->gamma*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + d->gamma*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)] - d->gamma*prims[ID(Prims::p, i, j, k)] - d->gamma*prims[ID(Prims::rho, i, j, k)] + prims[ID(Prims::p, i, j, k)] + prims[ID(Prims::rho, i, j, k)]) + (d->gamma*prims[ID(Prims::v1, i, j, k)] - prims[ID(Prims::v1, i, j, k)])*aux[ID(TDerivs::dtD, i, j, k)]/(d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)] - d->gamma*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::p, i, j, k)] - d->gamma*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::rho, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::p, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::rho, i, j, k)]) + aux[ID(TDerivs::dtS1, i, j, k)]/(sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)]);
        aux[ID(TDerivs::dtv2, i, j, k)] = -d->gamma*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtE, i, j, k)]/(d->gamma*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + d->gamma*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)] - d->gamma*prims[ID(Prims::p, i, j, k)] - d->gamma*prims[ID(Prims::rho, i, j, k)] + prims[ID(Prims::p, i, j, k)] + prims[ID(Prims::rho, i, j, k)]) + (d->gamma*prims[ID(Prims::v2, i, j, k)] - prims[ID(Prims::v2, i, j, k)])*aux[ID(TDerivs::dtD, i, j, k)]/(d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)] - d->gamma*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::p, i, j, k)] - d->gamma*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::rho, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::p, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::rho, i, j, k)]) + aux[ID(TDerivs::dtS2, i, j, k)]/(sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)]);
        aux[ID(TDerivs::dtv3, i, j, k)] = -d->gamma*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtE, i, j, k)]/(d->gamma*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + d->gamma*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)] - d->gamma*prims[ID(Prims::p, i, j, k)] - d->gamma*prims[ID(Prims::rho, i, j, k)] + prims[ID(Prims::p, i, j, k)] + prims[ID(Prims::rho, i, j, k)]) + (d->gamma*prims[ID(Prims::v3, i, j, k)] - prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtD, i, j, k)]/(d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + d->gamma*aux[ID(Aux::W, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)] - d->gamma*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::p, i, j, k)] - d->gamma*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::rho, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::p, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::rho, i, j, k)]) + aux[ID(TDerivs::dtS3, i, j, k)]/(sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::p, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::rho, i, j, k)]);

        // Use EoS to write dtn
        aux[ID(TDerivs::dtn, i, j, k)] = aux[ID(TDerivs::dtrho, i, j, k)] - (1/(d->gamma-1))*aux[ID(TDerivs::dtp, i, j, k)];
        // Now use chain rule to write dtW(dtv1,dtv2,dtv3...)
        aux[ID(TDerivs::dtW, i, j, k)] = aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::W, i, j, k)]*(prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]
                                             + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)]);

        // Old formulation!
        // Using chain rule for n rather than matrix-inversion result - NOT GOOD!
        //aux[ID(TDerivs::dtn, i, j, k)] = aux[ID(TDerivs::dtD, i, j, k)]/aux[ID(Aux::W, i, j, k)]
        //                                     - (prims[ID(Prims::n, i, j, k)]/aux[ID(Aux::W, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)];
        // Heavily simplified result
        //aux[ID(TDerivs::dtrho, i, j, k)] = aux[ID(TDerivs::dtE, i, j, k)];
        // Using EoS
        //aux[ID(TDerivs::dtp, i, j, k)] = (d->gamma-1)*(aux[ID(TDerivs::dtrho, i, j, k)] + aux[ID(TDerivs::dtn, i, j, k)]);
        //aux[ID(TDerivs::dtrho, i, j, k)] = aux[ID(TDerivs::dtn, i, j, k)] + (1/(d->gamma-1))*aux[ID(TDerivs::dtp, i, j, k)];

        aux[ID(TDerivs::dtT, i, j, k)] = (1/prims[ID(Prims::n, i, j, k)])*aux[ID(TDerivs::dtp, i, j, k)] 
                                             - (prims[ID(Prims::p, i, j, k)]/sqr(prims[ID(Prims::n, i, j, k)]))*aux[ID(TDerivs::dtn, i, j, k)];

        aux[ID(TDerivs::dtq1NS, i, j, k)] = -kappa*(sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(TDerivs::dtT, i+1, j, k)] - aux[ID(TDerivs::dtT, i-1, j, k)])/(d->dx)) + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtT, i, j+1, k)] - aux[ID(TDerivs::dtT, i, j-1, k)])/(d->dy)) + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzT + 2*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*dxT*aux[ID(TDerivs::dtv1, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*dyT*aux[ID(TDerivs::dtv2, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*dyT*aux[ID(TDerivs::dtv1, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv1, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)])*dxT*aux[ID(TDerivs::dtW, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyT*aux[ID(TDerivs::dtW, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtW, i, j, k)] + ((aux[ID(TDerivs::dtT, i+1, j, k)] - aux[ID(TDerivs::dtT, i-1, j, k)])/(d->dx)));
        aux[ID(TDerivs::dtq2NS, i, j, k)] = -kappa*(sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtT, i+1, j, k)] - aux[ID(TDerivs::dtT, i-1, j, k)])/(d->dx)) + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*dxT*aux[ID(TDerivs::dtv2, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(TDerivs::dtT, i, j+1, k)] - aux[ID(TDerivs::dtT, i, j-1, k)])/(d->dy)) + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzT + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*dxT*aux[ID(TDerivs::dtv1, i, j, k)] + 2*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*dyT*aux[ID(TDerivs::dtv2, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv2, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dxT*aux[ID(TDerivs::dtW, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*dyT*aux[ID(TDerivs::dtW, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtW, i, j, k)] + ((aux[ID(TDerivs::dtT, i, j+1, k)] - aux[ID(TDerivs::dtT, i, j-1, k)])/(d->dy)));
        aux[ID(TDerivs::dtq3NS, i, j, k)] = -kappa*(sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtT, i+1, j, k)] - aux[ID(TDerivs::dtT, i-1, j, k)])/(d->dx)) + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*dxT*aux[ID(TDerivs::dtv3, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtT, i, j+1, k)] - aux[ID(TDerivs::dtT, i, j-1, k)])/(d->dy)) + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*dyT*aux[ID(TDerivs::dtv3, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*dzT + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*dxT*aux[ID(TDerivs::dtv1, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*dyT*aux[ID(TDerivs::dtv2, i, j, k)] + 2*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dxT*aux[ID(TDerivs::dtW, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dyT*aux[ID(TDerivs::dtW, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(Aux::T, i, j, k+1)] - aux[ID(Aux::T, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtW, i, j, k)] + dzT);

        aux[ID(TDerivs::dtPiNS, i, j, k)] = -zeta*(aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + 0 + ((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + ((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + ((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)]);

        double C = 2.0/3.0;
        aux[ID(TDerivs::dtpi11NS, i, j, k)] = 2*eta*(C*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) - 2*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)));
        aux[ID(TDerivs::dtpi12NS, i, j, k)] = -2*eta*(((aux[ID(TDerivs::dtv1, i, j+1, k)] - aux[ID(TDerivs::dtv1, i, j-1, k)])/(d->dy)) + ((aux[ID(TDerivs::dtv2, i+1, j, k)] - aux[ID(TDerivs::dtv2, i-1, j, k)])/(d->dx)));
        aux[ID(TDerivs::dtpi13NS, i, j, k)] = -2*eta*(((aux[ID(TDerivs::dtv1, i, j, k+1)] - aux[ID(TDerivs::dtv1, i, j, k-1)])/(d->dz)) + ((aux[ID(TDerivs::dtv3, i+1, j, k)] - aux[ID(TDerivs::dtv3, i-1, j, k)])/(d->dx)));
        aux[ID(TDerivs::dtpi22NS, i, j, k)] = 2*eta*(C*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) - 2*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)));
        aux[ID(TDerivs::dtpi23NS, i, j, k)] = -2*eta*(((aux[ID(TDerivs::dtv2, i, j, k+1)] - aux[ID(TDerivs::dtv2, i, j, k-1)])/(d->dz)) + ((aux[ID(TDerivs::dtv3, i, j+1, k)] - aux[ID(TDerivs::dtv3, i, j-1, k)])/(d->dy)));
        aux[ID(TDerivs::dtpi33NS, i, j, k)] = 2*eta*(C*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) - 2*((aux[ID(TDerivs::dtv3, i+1, j, k)] - aux[ID(TDerivs::dtv3, i-1, j, k)])/(d->dx)));
        
        // Expression with full W(t) dependence - ones above are for simplification of W=1
        // dtpi11NS = 2*eta*(C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]**3*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*0 + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]**3*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)])*sqr(aux[ID(TDerivs::dtW, i, j, k)]) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + C*prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*0 + C*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + C*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + C*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] - 2*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) - 2*prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) - 2*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) - 2*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)])
        // dtpi12NS = 2*eta*(C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*0 + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*sqr(aux[ID(TDerivs::dtW, i, j, k)]) - aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i, j+1, k)] - aux[ID(TDerivs::dtv1, i, j-1, k)])/(d->dy)) - aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i+1, j, k)] - aux[ID(TDerivs::dtv2, i-1, j, k)])/(d->dx)) - prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) - prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) - aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i, j+1, k)] - prims[ID(Prims::v1, i, j-1, k)])/(d->dy)) - aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i+1, j, k)] - prims[ID(Prims::v2, i-1, j, k)])/(d->dx)) - ((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] - ((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv1, i, j, k)])
        // dtpi13NS = 2*eta*(C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)])*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*0 + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*sqr(aux[ID(TDerivs::dtW, i, j, k)]) - aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i, j, k+1)] - aux[ID(TDerivs::dtv1, i, j, k-1)])/(d->dz)) - aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i+1, j, k)] - aux[ID(TDerivs::dtv3, i-1, j, k)])/(d->dx)) - prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) - prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) - aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i, j, k+1)] - prims[ID(Prims::v1, i, j, k-1)])/(d->dz)) - aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i+1, j, k)] - prims[ID(Prims::v3, i-1, j, k)])/(d->dx)) - ((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] - ((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv1, i, j, k)])
        // dtpi22NS = 2*eta*(C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]**3*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*0 + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv2, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]**3*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*sqr(aux[ID(TDerivs::dtW, i, j, k)]) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + C*prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*0 + C*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + C*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + C*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] - 2*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) - 2*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) - 2*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) - 2*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)])
        // dtpi23NS = 2*eta*(C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)])*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*0 + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv2, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*sqr(aux[ID(TDerivs::dtW, i, j, k)]) - aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j, k+1)] - aux[ID(TDerivs::dtv2, i, j, k-1)])/(d->dz)) - aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j+1, k)] - aux[ID(TDerivs::dtv3, i, j-1, k)])/(d->dy)) - prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) - prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) - aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j, k+1)] - prims[ID(Prims::v2, i, j, k-1)])/(d->dz)) - aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j+1, k)] - prims[ID(Prims::v3, i, j-1, k)])/(d->dy)) - ((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] - ((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv2, i, j, k)])
        // dtpi33NS = 2*eta*(C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]**3*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]**3*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv3, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]**3*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*0 + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + 3*C*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)])*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] + 2*C*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + 2*C*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]**3*aux[ID(TDerivs::dtW, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + 2*C*aux[ID(Aux::W, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)])*sqr(aux[ID(TDerivs::dtW, i, j, k)]) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv1, i+1, j, k)] - aux[ID(TDerivs::dtv1, i-1, j, k)])/(d->dx)) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv2, i, j+1, k)] - aux[ID(TDerivs::dtv2, i, j-1, k)])/(d->dy)) + C*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i, j, k+1)] - aux[ID(TDerivs::dtv3, i, j, k-1)])/(d->dz)) + C*prims[ID(Prims::v1, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) + C*prims[ID(Prims::v2, i, j, k)]*((aux[ID(TDerivs::dtW, i, j+1, k)] - aux[ID(TDerivs::dtW, i, j-1, k)])/(d->dy)) + C*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i, j, k+1)] - aux[ID(TDerivs::dtW, i, j, k-1)])/(d->dz)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + C*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + C*0 + C*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv1, i, j, k)] + C*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy))*aux[ID(TDerivs::dtv2, i, j, k)] + C*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz))*aux[ID(TDerivs::dtv3, i, j, k)] - 2*aux[ID(Aux::W, i, j, k)]*((aux[ID(TDerivs::dtv3, i+1, j, k)] - aux[ID(TDerivs::dtv3, i-1, j, k)])/(d->dx)) - 2*prims[ID(Prims::v3, i, j, k)]*((aux[ID(TDerivs::dtW, i+1, j, k)] - aux[ID(TDerivs::dtW, i-1, j, k)])/(d->dx)) - 2*aux[ID(TDerivs::dtW, i, j, k)]*((prims[ID(Prims::v3, i+1, j, k)] - prims[ID(Prims::v3, i-1, j, k)])/(d->dx)) - 2*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx))*aux[ID(TDerivs::dtv3, i, j, k)])

        // NLO Forms
        aux[ID(Aux::q1LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxq1NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyq1NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzq1NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtq1NS, i, j, k)] + aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::q2LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxq2NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyq2NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzq2NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtq2NS, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::q3LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxq3NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyq3NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzq3NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtq3NS, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::PiLO, i, j, k)] = -((aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*dxvx + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*dyvy + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*dzvz + aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxPiNS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyPiNS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzPiNS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtPiNS, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::pi11LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxpi11NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dypi11NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzpi11NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi11NS, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::pi11NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::pi12LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxpi12NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dypi12NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzpi12NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi12NS, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::pi12NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::pi13LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxpi13NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dypi13NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzpi13NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi13NS, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::pi13NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::pi22LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxpi22NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dypi22NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzpi22NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi22NS, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::pi22NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::pi23LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxpi23NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dypi23NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzpi23NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi23NS, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::pi23NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        aux[ID(Aux::pi33LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*dxvx + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*dyvy + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*dzvz + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxpi33NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dypi33NS + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzpi33NS + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi33NS, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxW + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyW + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzW + aux[ID(Aux::pi33NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*dxn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*dyn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*dzn + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];

        // Without smarter gradients
        // aux[ID(Aux::q1LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::q1NS, i+1, j, k)] - aux[ID(Aux::q1NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::q1NS, i, j+1, k)] - aux[ID(Aux::q1NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::q1NS, i, j, k+1)] - aux[ID(Aux::q1NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtq1NS, i, j, k)] + aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::q2LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::q2NS, i+1, j, k)] - aux[ID(Aux::q2NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::q2NS, i, j+1, k)] - aux[ID(Aux::q2NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::q2NS, i, j, k+1)] - aux[ID(Aux::q2NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtq2NS, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::q3LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::q3NS, i+1, j, k)] - aux[ID(Aux::q3NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::q3NS, i, j+1, k)] - aux[ID(Aux::q3NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::q3NS, i, j, k+1)] - aux[ID(Aux::q3NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtq3NS, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::PiLO, i, j, k)] = -((aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::PiNS, i+1, j, k)] - aux[ID(Aux::PiNS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::PiNS, i, j+1, k)] - aux[ID(Aux::PiNS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::PiNS, i, j, k+1)] - aux[ID(Aux::PiNS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtPiNS, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::pi11LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::pi11NS, i+1, j, k)] - aux[ID(Aux::pi11NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::pi11NS, i, j+1, k)] - aux[ID(Aux::pi11NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::pi11NS, i, j, k+1)] - aux[ID(Aux::pi11NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi11NS, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::pi11NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi11NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::pi12LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::pi12NS, i+1, j, k)] - aux[ID(Aux::pi12NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::pi12NS, i, j+1, k)] - aux[ID(Aux::pi12NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::pi12NS, i, j, k+1)] - aux[ID(Aux::pi12NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi12NS, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::pi12NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi12NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::pi13LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::pi13NS, i+1, j, k)] - aux[ID(Aux::pi13NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::pi13NS, i, j+1, k)] - aux[ID(Aux::pi13NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::pi13NS, i, j, k+1)] - aux[ID(Aux::pi13NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi13NS, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::pi13NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi13NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::pi22LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::pi22NS, i+1, j, k)] - aux[ID(Aux::pi22NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::pi22NS, i, j+1, k)] - aux[ID(Aux::pi22NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::pi22NS, i, j, k+1)] - aux[ID(Aux::pi22NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi22NS, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::pi22NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi22NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::pi23LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::pi23NS, i+1, j, k)] - aux[ID(Aux::pi23NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::pi23NS, i, j+1, k)] - aux[ID(Aux::pi23NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::pi23NS, i, j, k+1)] - aux[ID(Aux::pi23NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi23NS, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::pi23NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi23NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];
        // aux[ID(Aux::pi33LO, i, j, k)] = -((aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*((prims[ID(Prims::v1, i+1, j, k)] - prims[ID(Prims::v1, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*((prims[ID(Prims::v2, i, j+1, k)] - prims[ID(Prims::v2, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*((prims[ID(Prims::v3, i, j, k+1)] - prims[ID(Prims::v3, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::pi33NS, i+1, j, k)] - aux[ID(Aux::pi33NS, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::pi33NS, i, j+1, k)] - aux[ID(Aux::pi33NS, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::pi33NS, i, j, k+1)] - aux[ID(Aux::pi33NS, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtpi33NS, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((aux[ID(Aux::W, i+1, j, k)] - aux[ID(Aux::W, i-1, j, k)])/(d->dx)) + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((aux[ID(Aux::W, i, j+1, k)] - aux[ID(Aux::W, i, j-1, k)])/(d->dy)) + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((aux[ID(Aux::W, i, j, k+1)] - aux[ID(Aux::W, i, j, k-1)])/(d->dz)) + aux[ID(Aux::pi33NS, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)])*prims[ID(Prims::n, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*((prims[ID(Prims::n, i+1, j, k)] - prims[ID(Prims::n, i-1, j, k)])/(d->dx)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*((prims[ID(Prims::n, i, j+1, k)] - prims[ID(Prims::n, i, j-1, k)])/(d->dy)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*((prims[ID(Prims::n, i, j, k+1)] - prims[ID(Prims::n, i, j, k-1)])/(d->dz)) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::pi33NS, i, j, k)]*aux[ID(TDerivs::dtn, i, j, k)])/prims[ID(Prims::n, i, j, k)];

      }
    }
  }   

}

void DEIFY::set_dtH(double * cons, double * prims, double * aux)
{
  Data * d(this->data);

  for (int i(d->is); i < d->ie; i++) {
    for (int j(d->js); j < d->je; j++) {
      for (int k(d->ks); k < d->ke; k++) {
        // Now can get the state vector NS correction
        dtH[ID(0, i, j, k)] = 0;
        dtH[ID(1, i, j, k)] = ((aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q1NS, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)] + ((aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtv1, i, j, k)] + (aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtq1NS, i, j, k)] + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtq2NS, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtq3NS, i, j, k)])*prims[ID(Prims::v1, i, j, k)] + aux[ID(TDerivs::dtq1NS, i, j, k)])*aux[ID(Aux::W, i, j, k)] + aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*aux[ID(TDerivs::dtv1, i, j, k)] + 2*aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtPiNS, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtpi11NS, i, j, k)] + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtpi12NS, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtpi13NS, i, j, k)];
        dtH[ID(2, i, j, k)] = ((aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)] + ((aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtv2, i, j, k)] + (aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtq1NS, i, j, k)] + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtq2NS, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtq3NS, i, j, k)])*prims[ID(Prims::v2, i, j, k)] + aux[ID(TDerivs::dtq2NS, i, j, k)])*aux[ID(Aux::W, i, j, k)] + aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*aux[ID(TDerivs::dtv2, i, j, k)] + 2*aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtPiNS, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtpi12NS, i, j, k)] + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtpi22NS, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtpi23NS, i, j, k)];
        dtH[ID(3, i, j, k)] = ((aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)] + ((aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtv3, i, j, k)] + (aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtq1NS, i, j, k)] + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtq2NS, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtq3NS, i, j, k)])*prims[ID(Prims::v3, i, j, k)] + aux[ID(TDerivs::dtq3NS, i, j, k)])*aux[ID(Aux::W, i, j, k)] + aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*aux[ID(TDerivs::dtv3, i, j, k)] + 2*aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtPiNS, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtpi13NS, i, j, k)] + prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtpi23NS, i, j, k)] + prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtpi33NS, i, j, k)];
        dtH[ID(4, i, j, k)] = (sqr(aux[ID(Aux::W, i, j, k)]) - 1)*aux[ID(TDerivs::dtPiNS, i, j, k)] + (2*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + 2*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + 2*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(TDerivs::dtW, i, j, k)] + (2*aux[ID(Aux::q1NS, i, j, k)]*aux[ID(TDerivs::dtv1, i, j, k)] + 2*aux[ID(Aux::q2NS, i, j, k)]*aux[ID(TDerivs::dtv2, i, j, k)] + 2*aux[ID(Aux::q3NS, i, j, k)]*aux[ID(TDerivs::dtv3, i, j, k)] + 2*prims[ID(Prims::v1, i, j, k)]*aux[ID(TDerivs::dtq1NS, i, j, k)] + 2*prims[ID(Prims::v2, i, j, k)]*aux[ID(TDerivs::dtq2NS, i, j, k)] + 2*prims[ID(Prims::v3, i, j, k)]*aux[ID(TDerivs::dtq3NS, i, j, k)])*aux[ID(Aux::W, i, j, k)] + 2*aux[ID(Aux::PiNS, i, j, k)]*aux[ID(Aux::W, i, j, k)]*aux[ID(TDerivs::dtW, i, j, k)] + aux[ID(TDerivs::dtpi11NS, i, j, k)] + aux[ID(TDerivs::dtpi22NS, i, j, k)] + aux[ID(TDerivs::dtpi33NS, i, j, k)];
      }
    }
  }

/*
        // These are HNLO NOT!! dtHNLO - needs more work to do that...
        HNLO_0 (like D)
        0

        HNLO_1 (like Sx)
        tau_q*(aux[ID(Aux::q1LO, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::q1LO, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(Aux::W, i, j, k)]
        tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]
        tau_pi*(aux[ID(Aux::pi11LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])

        HNLO_2 (like Sy)
        tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::q2LO, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(Aux::W, i, j, k)]
        tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]
        tau_pi*(aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])

        HNLO_3 (like Sz)
        tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::q3LO, i, j, k)])*aux[ID(Aux::W, i, j, k)]
        tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)]
        tau_pi*(aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])

        HNLO_4 (like E)
        2*tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(Aux::W, i, j, k)]
        tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)]) - 1)*aux[ID(Aux::PiLO, i, j, k)]
        tau_pi*(aux[ID(Aux::pi11LO, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)])

*/
}


void DEIFY::set_Fx(double * cons, double * prims, double * aux)
{
  // Syntax
  Data * d(this->data);
  double tau_q = d->optionalSimArgs[1];
  double tau_Pi = d->optionalSimArgs[3];
  double tau_pi = d->optionalSimArgs[5];

  for (int i(d->is); i < d->ie; i++) {
    for (int j(d->js); j < d->je; j++) {
      for (int k(d->ks); k < d->ke; k++) {
        // Now can set the diffusion vector
        // Leading Order Piece (NS)
        Fx[ID(0, i, j, k)] = 0;
        Fx[ID(1, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::PiNS, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::pi11NS, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)];
        Fx[ID(2, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::pi12NS, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)];
        Fx[ID(3, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)];
        Fx[ID(4, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)] - aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + 2*aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)];

        if (NLO) {
        
        // Add NLO Piece
        Fx[ID(0, i, j, k)] += 0;
        Fx[ID(1, i, j, k)] += 2*tau_q*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]
                              + tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v1, i, j, k)]) + 1)*aux[ID(Aux::PiLO, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi11LO, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::pi11LO, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]);
        Fx[ID(2, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v1, i, j, k)];
        Fx[ID(3, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v1, i, j, k)];
        Fx[ID(4, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*sqr(prims[ID(Prims::v1, i, j, k)]) + aux[ID(Aux::q1LO, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)]) - 1)*aux[ID(Aux::PiLO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]
                              + tau_pi*(2*aux[ID(Aux::pi11LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]);

	}

      }
    }
  }

}

void DEIFY::set_Fy(double * cons, double * prims, double * aux)
{
  // Syntax
  Data * d(this->data);
  double tau_q = d->optionalSimArgs[1];
  double tau_Pi = d->optionalSimArgs[3];
  double tau_pi = d->optionalSimArgs[5];

  for (int i(d->is); i < d->ie; i++) {
    for (int j(d->js); j < d->je; j++) {
      for (int k(d->ks); k < d->ke; k++) {
        // Now can get the diffusion vector
        // Leading Order Piece (NS)
        Fy[ID(0, i, j, k)] = 0;
        Fy[ID(1, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::pi12NS, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)];
        Fy[ID(2, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::PiNS, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::pi22NS, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)];
        Fy[ID(3, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::pi23NS, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)];
        Fy[ID(4, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)] - aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + 2*aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)];

        if (NLO) {

        // Add NLO Piece
        Fy[ID(0, i, j, k)] += 0;
        Fy[ID(1, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi11LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v2, i, j, k)];
        Fy[ID(2, i, j, k)] += 2*tau_q*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]
                              + tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v2, i, j, k)]) + 1)*aux[ID(Aux::PiLO, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::pi22LO, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]);
        Fy[ID(3, i, j, k)] += tau_q*(aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v2, i, j, k)];
        Fy[ID(4, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*sqr(prims[ID(Prims::v2, i, j, k)]) + aux[ID(Aux::q2LO, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)]) - 1)*aux[ID(Aux::PiLO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi11LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + 2*aux[ID(Aux::pi22LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]);

	}

      }
    }
  }

}

void DEIFY::set_Fz(double * cons, double * prims, double * aux)
{
  // Syntax
  Data * d(this->data);
  double tau_q = d->optionalSimArgs[1];
  double tau_Pi = d->optionalSimArgs[3];
  double tau_pi = d->optionalSimArgs[5];
 
  for (int i(d->is); i < d->ie; i++) {
    for (int j(d->js); j < d->je; j++) {
      for (int k(d->ks); k < d->ke; k++) {
        // Now can get the diffusion vector
        // Leading Order Piece (NS)
        Fz[ID(0, i, j, k)] = 0;
        Fz[ID(1, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::pi13NS, i, j, k)];
        Fz[ID(2, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi12NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::pi23NS, i, j, k)];
        Fz[ID(3, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::PiNS, i, j, k)] + 2*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi33NS, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::pi33NS, i, j, k)];
        Fz[ID(4, i, j, k)] = aux[ID(Aux::PiNS, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v3, i, j, k)] - aux[ID(Aux::PiNS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q1NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q2NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3NS, i, j, k)] + aux[ID(Aux::pi11NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi13NS, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi22NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi23NS, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + 2*aux[ID(Aux::pi33NS, i, j, k)]*prims[ID(Prims::v3, i, j, k)];

        if (NLO) {
 
        // Add NLO Piece
        Fz[ID(0, i, j, k)] += 0;
        Fz[ID(1, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi11LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v3, i, j, k)];
        Fz[ID(2, i, j, k)] += tau_q*(aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*aux[ID(Aux::PiLO, i, j, k)]*sqr(aux[ID(Aux::W, i, j, k)])*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi12LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)])*prims[ID(Prims::v3, i, j, k)];
        Fz[ID(3, i, j, k)] += 2*tau_q*aux[ID(Aux::W, i, j, k)]*aux[ID(Aux::q3LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)]
                              + tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)])*sqr(prims[ID(Prims::v3, i, j, k)]) + 1)*aux[ID(Aux::PiLO, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)] + aux[ID(Aux::pi33LO, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::pi33LO, i, j, k)]);
        Fz[ID(4, i, j, k)] += tau_q*(aux[ID(Aux::q1LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q2LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::q3LO, i, j, k)]*sqr(prims[ID(Prims::v3, i, j, k)]) + aux[ID(Aux::q3LO, i, j, k)])*aux[ID(Aux::W, i, j, k)]
                              + tau_Pi*(sqr(aux[ID(Aux::W, i, j, k)]) - 1)*aux[ID(Aux::PiLO, i, j, k)]*prims[ID(Prims::v3, i, j, k)]
                              + tau_pi*(aux[ID(Aux::pi11LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi22LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)] + aux[ID(Aux::pi13LO, i, j, k)]*prims[ID(Prims::v1, i, j, k)] + aux[ID(Aux::pi23LO, i, j, k)]*prims[ID(Prims::v2, i, j, k)] + 2*aux[ID(Aux::pi33LO, i, j, k)]*prims[ID(Prims::v3, i, j, k)]);

	}

      }
    }
  }

}
